server.port = var.HTTP_PORT

server.modules += ("mod_redirect")

$SERVER["socket"] == ":" + var.HTTPS_PORT {
    ssl.engine = "enable"
    ssl.cipher-list = "ECDHE-RSA-AES256-SHA384:AES256-SHA256:RC4-SHA:RC4:HIGH:!MD5:!aNULL:!EDH:!AESGCM"
    ssl.pemfile = env.@OVID@_ETC + "/server.pem"
}

server.modules += ("mod_compress")

compress.cache-dir = env.@OVID@_CACHE + "/lighttpd/compress/"
compress.filetype = ( "application/javascript", "text/css", "text/html", "text/plain" )

server.document-root = env.@OVID@_WWW + "/site"
server.indexfiles = ("index.html")

server.modules += ("mod_fastcgi")

fastcgi.server = ("/@ovid@" =>
    ("@ovid@" => (
        "bin-path" => env.@OVID@_WWW + "/@ovid@.wsgi",
        "check-local" => "disable",
        "min-procs" => 1,
        "socket" => env.@OVID@_RUN + "/.@ovid@.socket",
        "bin-environment" => (
           "DJANGO_SETTINGS_MODULE" => var.DJANGO_SETTINGS_MODULE,
        ),
    )),
)

server.modules += ("mod_alias")

alias.url += (
    "/admin-media/" => "/usr/share/pyshared/django/contrib/admin/media/",
    "/libjs/" => "/usr/share/javascript/",
    "/static/" => env.@OVID@_WWW + "/static/",
)

server.modules += ("mod_rewrite")

$HTTP["host"] == var.CANONICAL_HOSTNAME {
    $SERVER["socket"] == ":" + var.HTTPS_PORT {
        url.rewrite-once = (
            "^(/robots.txt)$" => "$1",
            "^(/admin-media.*)$" => "$1",
            "^(/libjs.*)$" => "$1",
            "^(/static.*)$" => "$1",
            "^(/.*)$" => "/@ovid@$1",
        )
    }
    else $HTTP["host"] =~ "^.*$" {
        url.redirect = ( "^/(.*)" => "https://" + var.CANONICAL_HOSTNAME + ":" + var.HTTPS_PORT + "/$1" )
    }
}
else $HTTP["host"] =~ "^.*$" {
    url.redirect = ( "^/(.*)" => "https://" + var.CANONICAL_HOSTNAME + ":" + var.HTTPS_PORT + "/$1" )
}

server.modules += ("mod_expire", "mod_setenv")

$HTTP["url"] =~ "\.(jpg|gif|png|css|js)$" {
    expire.url = ( "" => "access 7 days" ),
    setenv.add-response-header += ( "Cache-Control" => "public" )
}

server.errorlog = env.@OVID@_LOG + "/lighttpd.error.log"
server.pid-file = env.@OVID@_RUN + "/lighttpd.pid"

server.modules += ("mod_accesslog")

accesslog.filename = env.@OVID@_LOG + "/lighttpd.access.log"

include_shell "/usr/share/lighttpd/create-mime.assign.pl"
